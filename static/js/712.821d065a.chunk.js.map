{"version":3,"file":"static/js/712.821d065a.chunk.js","mappings":"8LAoFA,QAjEA,SAAaA,GACX,MAAM,QACJC,EAAO,QACPC,EAAO,UACPC,EAAS,QACTC,EAAO,aACPC,EAAY,cACZC,GACEN,EACEO,GAASC,EAAAA,EAAAA,QAAuB,MAChCC,GAAMD,EAAAA,EAAAA,QAA8B,MAkD1C,OAhDAE,EAAAA,EAAAA,kBAAgB,KACVD,EAAIE,UACNJ,EAAOI,QAAUC,IAAAA,IAAMH,EAAIE,SAC3BC,IAAAA,UAAY,qDAAsD,CAChEC,YAAa,wFAEZC,MAAMP,EAAOI,SAChBF,EAAIE,QAAQI,MAAMC,MAAQ,OAC1BP,EAAIE,QAAQI,MAAME,OAAS,OAC7B,GACC,KACHP,EAAAA,EAAAA,kBAAgB,KACd,MAAMQ,EAAUA,KACd,GAAIX,EAAOI,QAAS,CAClB,MAAM,IAAEQ,EAAG,IAAEC,GAAQb,EAAOI,QAAQU,YAC9BlB,EAAYI,EAAOI,QAAQW,UACjCjB,EAAac,EAAKC,EAAKjB,EACzB,GAMF,OAJII,EAAOI,UACTJ,EAAOI,QAAQY,GAAG,UAAWL,GAC7BX,EAAOI,QAAQY,GAAG,UAAWL,IAExB,KACDX,EAAOI,UACTJ,EAAOI,QAAQa,IAAI,UAAWN,GAC9BX,EAAOI,QAAQa,IAAI,UAAWN,GAChC,CACD,GACA,CAACb,KACJK,EAAAA,EAAAA,kBAAgB,KACd,GAAIH,EAAOI,QACT,IAAK,IAAIc,KAAUrB,EAAS,CAC1B,MAAM,GAAEsB,EAAE,IAAEP,EAAG,IAAEQ,GAAQF,EACnBG,EAAgBhB,IAAAA,OAAS,CAACO,EAAKQ,IACrCC,EAAcL,GAAG,SAAS,KACxBjB,EAAcoB,EAAG,IAEnBE,EAAcd,MAAMP,EAAOI,QAC7B,CACF,GACC,CAACP,EAASE,KACbI,EAAAA,EAAAA,kBAAgB,KACVH,EAAOI,SACTJ,EAAOI,QAAQkB,QAAQ,CAAC5B,EAASC,GAAUC,EAC7C,GACC,CAACF,EAASC,EAASC,KAGpB2B,EAAAA,EAAAA,KAAA,OAAKrB,IAAKA,GAEd,ECjFA,EAA0B,yBC+C1B,QA5BA,SAAiBT,GACf,MAAM,QACJC,EAAO,QACPC,EAAO,UACPC,EAAS,QACTC,EAAO,aACPC,GACEL,EAEE+B,GAAWC,EAAAA,EAAAA,MACXC,GAAoBC,EAAAA,EAAAA,cAAaR,IACrCK,EAAS,WAAWL,IAAK,GACxB,CAACK,IAEJ,OACED,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAeC,UAC7BP,EAAAA,EAAAA,KAACQ,EAAG,CACFrC,QAASA,EACTC,QAASA,EACTC,UAAWA,EACXC,QAASA,EACTE,cAAe2B,EACf5B,aAAcA,KAItB,C","sources":["Map.tsx","webpack://lighter/./src/MapPage.module.scss?25aa","MapPage.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useLayoutEffect,\n} from \"react\";\nimport L, { Map as MapType } from \"leaflet\";\n\ninterface MapProps {\n  centerX: number;\n  centerY: number;\n  zoomLevel: number;\n  markers: Array<{\n    lat: number,\n    lon: number,\n    id: string,\n  }>;\n  onMarkerClick(id: string): void;\n  onViewChange(centerX: number, centerY: number, zoomLevel: number): void;\n}\n\nfunction Map(props: MapProps) {\n  const {\n    centerX,\n    centerY,\n    zoomLevel,\n    markers,\n    onViewChange,\n    onMarkerClick\n  } = props;\n  const mapRef = useRef<MapType | null>(null);\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      mapRef.current = L.map(ref.current);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      })\n        .addTo(mapRef.current);\n      ref.current.style.width = '100%';\n      ref.current.style.height = '100%';\n    }\n  }, []);\n  useLayoutEffect(() => {\n    const handler = () => {\n      if (mapRef.current) {\n        const { lat, lng } = mapRef.current.getCenter();\n        const zoomLevel = mapRef.current.getZoom();\n        onViewChange(lat, lng, zoomLevel);\n      }\n    };\n    if (mapRef.current) {\n      mapRef.current.on('zoomend', handler);\n      mapRef.current.on('moveend', handler);\n    }\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off('zoomend', handler);\n        mapRef.current.off('moveend', handler);\n      }\n    };\n  }, [onViewChange]);\n  useLayoutEffect(() => {\n    if (mapRef.current) {\n      for (let marker of markers) {\n        const { id, lat, lon } = marker;\n        const markerElement = L.marker([lat, lon]);\n        markerElement.on('click', () => {\n          onMarkerClick(id);\n        });\n        markerElement.addTo(mapRef.current);\n      }\n    }\n  }, [markers, onMarkerClick]);\n  useLayoutEffect(() => {\n    if (mapRef.current) {\n      mapRef.current.setView([centerX, centerY], zoomLevel);\n    }\n  }, [centerX, centerY, zoomLevel]);\n\n  return (\n    <div ref={ref} />\n  );\n}\n\nexport default Map;\n","// extracted by mini-css-extract-plugin\nexport default {\"mapPage\":\"MapPage_mapPage__rJlIj\"};","import React, { useCallback } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport Map from \"./Map\";\n\nimport styles from \"./MapPage.module.scss\";\n\ninterface MapPageProps {\n  centerX: number;\n  centerY: number;\n  zoomLevel: number;\n  markers: Array<{\n    id: string,\n    lat: number,\n    lon: number,\n  }>;\n  onViewChange(centerX: number, centerY: number, zoomLevel: number): void;\n}\n\nfunction MapPage(props: MapPageProps) {\n  const {\n    centerX,\n    centerY,\n    zoomLevel,\n    markers,\n    onViewChange\n  } = props;\n\n  const navigate = useNavigate();\n  const handleMarkerClick = useCallback((id: string) => {\n    navigate(`/result/${id}`);\n  }, [navigate]);\n\n  return (\n    <div className={styles.mapPage}>\n      <Map\n        centerX={centerX}\n        centerY={centerY}\n        zoomLevel={zoomLevel}\n        markers={markers}\n        onMarkerClick={handleMarkerClick}\n        onViewChange={onViewChange}\n      />\n    </div>\n  );\n}\n\nexport default MapPage;\n"],"names":["props","centerX","centerY","zoomLevel","markers","onViewChange","onMarkerClick","mapRef","useRef","ref","useLayoutEffect","current","L","attribution","addTo","style","width","height","handler","lat","lng","getCenter","getZoom","on","off","marker","id","lon","markerElement","setView","_jsx","navigate","useNavigate","handleMarkerClick","useCallback","className","styles","children","Map"],"sourceRoot":""}