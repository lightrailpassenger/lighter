{"version":3,"sources":["Map.tsx","MapPage.tsx","MapPage.module.scss"],"names":["Map","props","centerX","centerY","zoomLevel","markers","onViewChange","onMarkerClick","mapRef","useRef","ref","useLayoutEffect","current","L","map","tileLayer","attribution","addTo","style","width","height","handler","getCenter","lat","lng","getZoom","on","off","marker","id","lon","markerElement","setView","MapPage","navigate","useNavigate","handleMarkerClick","useCallback","className","styles","mapPage","module","exports"],"mappings":"6JAoFeA,MAjEf,SAAaC,GACX,IACEC,EAMED,EANFC,QACAC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,UACAC,EAGEJ,EAHFI,QACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,cAEIC,EAASC,iBAAuB,MAChCC,EAAMD,iBAA8B,MAkD1C,OAhDAE,2BAAgB,WACVD,EAAIE,UACNJ,EAAOI,QAAUC,IAAEC,IAAIJ,EAAIE,SAC3BC,IAAEE,UAAU,qDAAsD,CAChEC,YAAa,wFAEZC,MAAMT,EAAOI,SAChBF,EAAIE,QAAQM,MAAMC,MAAQ,OAC1BT,EAAIE,QAAQM,MAAME,OAAS,UAE5B,IACHT,2BAAgB,WACd,IAAMU,EAAU,WACd,GAAIb,EAAOI,QAAS,CAClB,MAAqBJ,EAAOI,QAAQU,YAA5BC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACPpB,EAAYI,EAAOI,QAAQa,UACjCnB,EAAaiB,EAAKC,EAAKpB,KAO3B,OAJII,EAAOI,UACTJ,EAAOI,QAAQc,GAAG,UAAWL,GAC7Bb,EAAOI,QAAQc,GAAG,UAAWL,IAExB,WACDb,EAAOI,UACTJ,EAAOI,QAAQe,IAAI,UAAWN,GAC9Bb,EAAOI,QAAQe,IAAI,UAAWN,OAGjC,CAACf,IACJK,2BAAgB,WACd,GAAIH,EAAOI,QAAS,CAAC,IAAD,gBACCP,GADD,yBACTuB,EADS,QAERC,EAAiBD,EAAjBC,GAAIN,EAAaK,EAAbL,IAAKO,EAAQF,EAARE,IACXC,EAAgBlB,IAAEe,OAAO,CAACL,EAAKO,IACrCC,EAAcL,GAAG,SAAS,WACxBnB,EAAcsB,MAEhBE,EAAcd,MAAMT,EAAOI,UAN7B,2BAA6B,IADX,kCAUnB,CAACP,EAASE,IACbI,2BAAgB,WACVH,EAAOI,SACTJ,EAAOI,QAAQoB,QAAQ,CAAC9B,EAASC,GAAUC,KAE5C,CAACF,EAASC,EAASC,IAGpB,qBAAKM,IAAKA,K,iBChCCuB,UA5Bf,SAAiBhC,GACf,IACEC,EAKED,EALFC,QACAC,EAIEF,EAJFE,QACAC,EAGEH,EAHFG,UACAC,EAEEJ,EAFFI,QACAC,EACEL,EADFK,aAGI4B,EAAWC,cACXC,EAAoBC,uBAAY,SAACR,GACrCK,EAAS,WAAD,OAAYL,MACnB,CAACK,IAEJ,OACE,qBAAKI,UAAWC,IAAOC,QAAvB,SACE,cAAC,EAAD,CACEtC,QAASA,EACTC,QAASA,EACTC,UAAWA,EACXC,QAASA,EACTE,cAAe6B,EACf9B,aAAcA,Q,mBCzCtBmC,EAAOC,QAAU,CAAC,QAAU","file":"static/js/7.034d8bbf.chunk.js","sourcesContent":["import React, {\n  useRef,\n  useLayoutEffect,\n} from \"react\";\nimport L, { Map as MapType } from \"leaflet\";\n\ninterface MapProps {\n  centerX: number;\n  centerY: number;\n  zoomLevel: number;\n  markers: Array<{\n    lat: number,\n    lon: number,\n    id: string,\n  }>;\n  onMarkerClick(id: string): void;\n  onViewChange(centerX: number, centerY: number, zoomLevel: number): void;\n}\n\nfunction Map(props: MapProps) {\n  const {\n    centerX,\n    centerY,\n    zoomLevel,\n    markers,\n    onViewChange,\n    onMarkerClick\n  } = props;\n  const mapRef = useRef<MapType | null>(null);\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      mapRef.current = L.map(ref.current);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      })\n        .addTo(mapRef.current);\n      ref.current.style.width = '100%';\n      ref.current.style.height = '100%';\n    }\n  }, []);\n  useLayoutEffect(() => {\n    const handler = () => {\n      if (mapRef.current) {\n        const { lat, lng } = mapRef.current.getCenter();\n        const zoomLevel = mapRef.current.getZoom();\n        onViewChange(lat, lng, zoomLevel);\n      }\n    };\n    if (mapRef.current) {\n      mapRef.current.on('zoomend', handler);\n      mapRef.current.on('moveend', handler);\n    }\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off('zoomend', handler);\n        mapRef.current.off('moveend', handler);\n      }\n    };\n  }, [onViewChange]);\n  useLayoutEffect(() => {\n    if (mapRef.current) {\n      for (let marker of markers) {\n        const { id, lat, lon } = marker;\n        const markerElement = L.marker([lat, lon]);\n        markerElement.on('click', () => {\n          onMarkerClick(id);\n        });\n        markerElement.addTo(mapRef.current);\n      }\n    }\n  }, [markers, onMarkerClick]);\n  useLayoutEffect(() => {\n    if (mapRef.current) {\n      mapRef.current.setView([centerX, centerY], zoomLevel);\n    }\n  }, [centerX, centerY, zoomLevel]);\n\n  return (\n    <div ref={ref} />\n  );\n}\n\nexport default Map;\n","import React, { useCallback } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport Map from \"./Map\";\n\nimport styles from \"./MapPage.module.scss\";\n\ninterface MapPageProps {\n  centerX: number;\n  centerY: number;\n  zoomLevel: number;\n  markers: Array<{\n    id: string,\n    lat: number,\n    lon: number,\n  }>;\n  onViewChange(centerX: number, centerY: number, zoomLevel: number): void;\n}\n\nfunction MapPage(props: MapPageProps) {\n  const {\n    centerX,\n    centerY,\n    zoomLevel,\n    markers,\n    onViewChange\n  } = props;\n\n  const navigate = useNavigate();\n  const handleMarkerClick = useCallback((id: string) => {\n    navigate(`/result/${id}`);\n  }, [navigate]);\n\n  return (\n    <div className={styles.mapPage}>\n      <Map\n        centerX={centerX}\n        centerY={centerY}\n        zoomLevel={zoomLevel}\n        markers={markers}\n        onMarkerClick={handleMarkerClick}\n        onViewChange={onViewChange}\n      />\n    </div>\n  );\n}\n\nexport default MapPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapPage\":\"MapPage_mapPage__1Lb_1\"};"],"sourceRoot":""}