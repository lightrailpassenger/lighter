{"version":3,"file":"static/js/991.f3dd96a1.chunk.js","mappings":"mKACA,QAAsB,6BAAtB,EAA0D,8BAA1D,EAAgG,+BAAhG,EAAwI,gC,aC4BxI,QAjBA,SAAyBA,GACvB,MAAM,GAAEC,EAAE,OAAEC,EAAM,OAAEC,GAAWH,EACzBI,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,cAAaC,IAC/BA,EAAMC,iBACNL,EAAS,WAAWH,IAAK,GACxB,CAACG,EAAUH,IAEd,OACES,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAE,GAAGX,KAAUC,OAC5CW,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,KACjBE,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAeG,KAAM,aAAad,IAAMe,QAASV,EAAYO,SAAC,SAGlF,E,cC1BA,QAAuB,8BAAvB,EAAuE,yCAAvE,EAA6I,oDAA7I,EAA+M,qCAA/M,EAAmQ,sCAAnQ,EAAuT,qCAAvT,EAAmX,8CCO7WI,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,QAqE3F,QAnEA,WACE,MAAOC,EAAoBC,IAAyBC,EAAAA,EAAAA,WAAS,IACpDC,OAAOC,YAAYL,EAAUM,KAAKC,GAAW,CAACA,GAAO,QAExDC,EAAUJ,OAAOK,QAAQR,GAC5BS,MAAK,EAAEC,IAAUC,KAAaD,EAAOE,cAAcD,KACnDN,KAAI,EAAEC,EAAOO,MAEVjB,EAAAA,EAAAA,KAAA,UAEEH,UAAW,GAAGC,IAAqBmB,EAAS,IAAInB,IAAgC,KAChFI,QAASA,KACPG,GAAsB,EACpB,CAACK,GAAQQ,KACNC,MACJ,CACC,CAACT,IAASQ,KACPC,KACF,EACHpB,SAEDW,GAZIA,KAgBPU,EAAgBb,OAAOK,QAAQR,GAClCiB,QAAO,EAAEX,EAAOO,KAAaA,IAC7BR,KAAI,EAAEC,KAAYA,IACfY,EAAeC,EAClBF,QAAO,EAAGG,YAAcA,EAAOC,MAAMf,GAAWU,EAAcM,SAAShB,OACvED,KAAI,EACHtB,KACAC,SACAC,aAGEW,EAAAA,EAAAA,KAAC2B,EAAe,CAAcxC,GAAIA,EAAIC,OAAQA,EAAQC,OAAQA,GAAxCD,KAG5B,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAkCC,SAC/CY,KAEHX,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAoBC,UAClCC,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXI,SAAST,EAAAA,EAAAA,cAAY,KACnBY,GAAuBuB,GACrBrB,OAAOC,YAAYD,OAAOK,QAAQgB,GAAUnB,KAAI,EAAEC,EAAOO,KAAa,CAACP,GAAO,OAC9E,GACD,IAAIX,SACR,eAKJuB,EAAaO,OAASP,GACrBtB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,SAAC,qBAM5C,C","sources":["webpack://lighter/./src/StationListItem.module.scss?580b","StationListItem.tsx","webpack://lighter/./src/StationListPage.module.scss?a473","StationListPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"row\":\"StationListItem_row__6ZA6F\",\"name\":\"StationListItem_name__JaUkW\",\"space\":\"StationListItem_space__M1gfv\",\"button\":\"StationListItem_button__21rra\"};","import React, { useCallback } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport styles from \"./StationListItem.module.scss\";\n\ninterface StationListeItemProps {\n  id: string;\n  nameEn: string;\n  nameCh: string;\n}\n\nfunction StationListItem(props: StationListeItemProps) {\n  const { id, nameEn, nameCh } = props;\n  const navigate = useNavigate();\n  const handleClick = useCallback((event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    navigate(`/result/${id}`);\n  }, [navigate, id]);\n\n  return (\n    <div className={styles.row}>\n      <span className={styles.name}>{`${nameEn} ${nameCh}`}</span>\n      <span className={styles.space} />\n      <a className={styles.button} href={`/#/result/${id}`} onClick={handleClick}>Go</a>\n    </div>\n  );\n}\n\nexport default StationListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"StationListPage_page__a2ozk\",\"routeButtonList\":\"StationListPage_routeButtonList__X1D+b\",\"routeButtonListRouteButton\":\"StationListPage_routeButtonListRouteButton__4lso3\",\"placeholder\":\"StationListPage_placeholder__cOq0W\",\"actionButton\":\"StationListPage_actionButton__v-7A4\",\"routeButton\":\"StationListPage_routeButton__mfvo5\",\"routeButton__enabled\":\"StationListPage_routeButton__enabled__eeLEU\"};","import React, { useCallback, useState } from \"react\";\n\nimport StationListItem from \"./StationListItem\";\n\nimport routeData from \"./route_data.json\";\n\nimport styles from \"./StationListPage.module.scss\";\n\nconst routeList = [\"505\", \"507\", \"610\", \"614\", \"615\", \"614P\", \"615P\", \"705\", \"706\", \"751\", \"761P\"];\n\nfunction StationListPage() {\n  const [routeEnabledStatus, setRouteEnabledStatus] = useState(() => {\n    return Object.fromEntries(routeList.map((route) => ([route, true])));\n  });\n  const buttons = Object.entries(routeEnabledStatus)\n    .sort(([route1], [route2]) => (route1.localeCompare(route2)))\n    .map(([route, status]) => {\n      return (\n        <button\n          key={route}\n          className={`${styles.routeButton}${status ? ` ${styles.routeButton__enabled}` : ''}`}\n          onClick={() => {\n            setRouteEnabledStatus(({\n              [route]: prevRouteStatus,\n              ...otherStatuses\n            }) => ({\n              [route]: !prevRouteStatus,\n              ...otherStatuses\n            }));\n          }}\n        >\n          {route}\n        </button>\n      );\n    });\n  const enabledRoutes = Object.entries(routeEnabledStatus)\n    .filter(([route, status]) => (status))\n    .map(([route]) => (route));\n  const stationItems = routeData\n    .filter(({ routes }) => (routes.some((route) => (enabledRoutes.includes(route)))))\n    .map(({\n      id,\n      nameEn,\n      nameCh,\n    }) => {\n      return (\n        <StationListItem key={nameEn} id={id} nameEn={nameEn} nameCh={nameCh} />\n      );\n    });\n  return (\n    <div className={styles.page}>\n      <div className={styles.routeButtonList}>\n        <div className={styles.routeButtonListRouteButton}>\n          {buttons}\n        </div>\n        <div className={styles.actionButton}>\n          <button\n            className={styles.routeButton}\n            onClick={useCallback(() => {\n              setRouteEnabledStatus((statuses) => (\n                Object.fromEntries(Object.entries(statuses).map(([route, status]) => ([route, false])))\n              ));\n            }, [])}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n      {stationItems.length ? stationItems : (\n        <div className={styles.placeholder}>\n          Choose a route\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default StationListPage;\n"],"names":["props","id","nameEn","nameCh","navigate","useNavigate","handleClick","useCallback","event","preventDefault","_jsxs","className","styles","children","_jsx","href","onClick","routeList","routeEnabledStatus","setRouteEnabledStatus","useState","Object","fromEntries","map","route","buttons","entries","sort","route1","route2","localeCompare","status","prevRouteStatus","otherStatuses","enabledRoutes","filter","stationItems","routeData","routes","some","includes","StationListItem","statuses","length"],"sourceRoot":""}